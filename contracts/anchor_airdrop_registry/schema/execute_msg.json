{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "fabricate_m_i_r_claim"
      ],
      "properties": {
        "fabricate_m_i_r_claim": {
          "type": "object",
          "required": [
            "amount",
            "proof",
            "stage"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "proof": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stage": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "fabricate_a_n_c_claim"
      ],
      "properties": {
        "fabricate_a_n_c_claim": {
          "type": "object",
          "required": [
            "amount",
            "proof",
            "stage"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "proof": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stage": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "hub_contract": {
              "type": [
                "string",
                "null"
              ]
            },
            "owner": {
              "type": [
                "string",
                "null"
              ]
            },
            "reward_contract": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_airdrop_info"
      ],
      "properties": {
        "add_airdrop_info": {
          "type": "object",
          "required": [
            "airdrop_info",
            "airdrop_token"
          ],
          "properties": {
            "airdrop_info": {
              "$ref": "#/definitions/AirdropInfo"
            },
            "airdrop_token": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "remove_airdrop_info"
      ],
      "properties": {
        "remove_airdrop_info": {
          "type": "object",
          "required": [
            "airdrop_token"
          ],
          "properties": {
            "airdrop_token": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_airdrop_info"
      ],
      "properties": {
        "update_airdrop_info": {
          "type": "object",
          "required": [
            "airdrop_info",
            "airdrop_token"
          ],
          "properties": {
            "airdrop_info": {
              "$ref": "#/definitions/AirdropInfo"
            },
            "airdrop_token": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AirdropInfo": {
      "type": "object",
      "required": [
        "airdrop_contract",
        "airdrop_swap_contract",
        "airdrop_token_contract"
      ],
      "properties": {
        "airdrop_contract": {
          "type": "string"
        },
        "airdrop_swap_contract": {
          "type": "string"
        },
        "airdrop_token_contract": {
          "type": "string"
        },
        "swap_belief_price": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "swap_max_spread": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
